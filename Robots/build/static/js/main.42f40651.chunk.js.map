{"version":3,"sources":["component/Card.js","component/CardList.js","component/SearchBox.js","component/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots_cardList","cardComponent","map","user","i","SearchBox","yo","searchchange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","console","log","state","robot_in","fetch","then","json","j","filterRobot","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mMAqBeA,EAnBJ,SAAC,GACX,IADYC,EACb,EADaA,KAAKC,EAClB,EADkBA,MAAMC,EACxB,EADwBA,GAEtB,OAGG,cAFF,CAEE,OAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,eAAeC,IAAG,+BAA0BH,EAA1B,mBAE1B,gCACC,6BAAKF,IACL,4BAAIC,WCeGK,EAzBC,SAAC,GAChB,IADiBC,EAClB,EADkBA,gBAKXC,EAAcD,EAAgBE,KACnC,SAACC,EAAKC,GAEL,OACC,cAAE,EAAF,CAEAT,GAAIK,EAAgBI,GAAGT,GACvBF,KAAMO,EAAgBI,GAAGX,KACzBC,MAAOM,EAAgBI,GAAGV,OAHrBM,EAAgBI,GAAGT,OAQ3B,OACC,8BACMM,KCFOI,EAlBE,SAAC,GAClB,EADmBC,GAClB,IADqBC,EACtB,EADsBA,aAGrB,OACC,qBAAKX,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBAEZC,SAAUH,OCAEI,EAVF,SAACC,GAEV,OACQ,qBAAKC,MAAO,CAAEC,UAAU,SAAUC,OAAO,gBAAgBC,OAAQ,SAAjE,SACKJ,EAAMK,YC+ERC,E,kDA7Ed,aACC,IAAD,8BACC,gBAuCDC,eAAe,SAACC,GAGf,EAAKC,SAEJ,CACCC,YAAYF,EAAMG,OAAOC,QAG3B,WACCC,QAAQC,IAAI,OAAO,EAAKC,MAAML,iBAhD/B,EAAKK,MACL,CAECC,SAAS,GACTN,YAAa,GACbhB,GAAG,aAPL,E,gEAWC,IAAD,OAIEuB,MAAM,8CACLC,MACC,SAAA1B,GAEC,OAAOA,EAAE2B,UAIXD,MACC,SAAAE,GAEC,EAAKX,SAEJ,CAACO,SAASI,S,+BA6Bf,IAAD,OACOC,EAAYC,KAAKP,MAAMC,SAASO,QACrC,SAAC/B,GAED,OAAOA,EAAEX,KAAK2C,cAAcC,SAAS,EAAKV,MAAML,YAAYc,kBAG7D,OACE,sBAAKxC,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWW,aAAc2B,KAAKf,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUnB,gBAAiBiC,a,GAxEhBK,aCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCEdO,IAASC,OACL,8BACC,cAAC,EAAD,MACMC,SAASC,eAAe,SAKnCX,M","file":"static/js/main.42f40651.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card=({name,email,id})=>\n{\n  return(\n  \t// <h1> Robots Heading</h1>..error as only one thing should be returned...thus one div or array\n  \t//Width x Ht.\n  \t  <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n  \t  \t<img alt='Robots bhai ' src={`https://robohash.org/${id}?size=200x200`} />\n  \t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n  \t  \t <div>\n  \t  \t \t<h2>{name}</h2>\n  \t  \t \t<p>{email}</p>\n  \t  \t \t\n  \t  \t </div>\n\n  \t  </div>\n\n\n\t\t);\n}\nexport default Card;","import React from 'react';\nimport Cards from './Card';\nconst CardList =({robots_cardList})=>\n{\n\n\t// if(true)\n\t// {throw new Error(\"Noooooo broooo\")}\n\tconst cardComponent=robots_cardList.map(\n\t\t(user,i)=>\n\t    {\n\t\t\treturn(\n\t\t\t < Cards \n\t\t\t key={robots_cardList[i].id}\n\t\t\t id={robots_cardList[i].id}\n\t\t\t name={robots_cardList[i].name} \n\t\t\t email={robots_cardList[i].email}\n\t\t\t />\n\t\t     );\n\t    })\n\n\treturn(\n\t\t<div>\n\t\t  \t  {cardComponent}\n\t\t  </div>\n\t\t);\n} \n\nexport default CardList;","import React from 'react';\n\nconst SearchBox= ({yo,searchchange})=>\n{\n\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\ttype='search' \n\t\t\tplaceholder='Search here..'\n\t\t\t// value={yo}\n\t\t\tonChange={searchchange}\n\t\t\t/>\n\t\t\t{/* {console.log(searchchange)} */}\n\t\t{/*<div> yooo{robot_in}</div>*/}\n\t\t</div>\n\n\t\t);\n} \nexport default SearchBox;\n// var a=1;\n// export const a;","import React from 'react'\n\nconst Scroll=(props)=>\n{\n    return(\n            <div style={{ overflowY:'scroll' ,border:'5px solid red',height: '500px'}}>\n                {props.children}\n            </div>\n\n          )\n}\n\nexport default Scroll","import React, {Component} from 'react';\nimport CardList from '../component/CardList';\nimport Searchbox from '../component/SearchBox'\n// import {robotInfo} from './robot_info';  //Using link in fetch()\nimport ScrollBar from '../component/Scroll'\n\nclass App extends Component\n{\n\tconstructor()\n\t{\n\t\tsuper()\n\t\tthis.state=\n\t\t{\n\t\t\t// robot_in:robotInfo,\n\t\t\trobot_in:[],\n\t\t\tsearchfield: '',\n\t\t\tyo:'hello app'\n\t\t}\n\t}\n\tcomponentDidMount()\n\t{\n\t\t// this.setState(\n\t\t// \t// {robot_in:robotInfo} \n\t\t// \t\t\t)\n\t\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then(\n\t\t\t\t\ti=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn i.json();\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t)\n\t\t\t.then(\n\t\t\t\t\tj=>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setState\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t{robot_in:j}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)\t\t\n\t\t\n\t}\n\n\n\n\n\t\n    //Function inside a class is defined in this way\n\tonSearchChange=(event)=>\n\t{\n\t\t//to update value of variables defined in constructor& state, weuse setState \n\t\tthis.setState(\n\t\t\t//this is object\n\t\t {\n\t\t\t searchfield:event.target.value \n\t\t }\n\t\t,\n\t\t()=>{\n\t\t\tconsole.log(\"here\",this.state.searchfield)\n\t\t\t}\n\t\t)\t\n\t\t// console.log(\"out\",this.state.searchfield)\n\t}\n\n\trender()\n\t{\n\t\tconst filterRobot=this.state.robot_in.filter(\n\t\t\t(i) =>\n\t\t{\n\t\t\treturn i.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n\t\t})\n\n\t\treturn(\n\t\t\t\t<div className=\"tc\">\n\t\t\t\t\t\t<h1>Robofriends</h1>\n\t\t\t\t\t\t<Searchbox searchchange={this.onSearchChange}/>\n\t\t\t\t\t\t<ScrollBar>\n\t\t\t\t\t\t\t<CardList robots_cardList={filterRobot}/>\n\t\t\t\t\t\t</ScrollBar>\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport 'tachyons';\n\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n\t\t\t\t<div>\t\n\t\t\t\t\t<App />\n\t\t\t\t</div>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}